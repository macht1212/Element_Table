Index: info/info.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>font_color = [0, 0, 0, 1]\n\nnon_metal = [143 / 255, 250 / 255, 139 / 255, 1]\nalkaline = [252 / 255, 77 / 255, 83 / 255, 1]\nalkaline_earth = [255 / 255, 215 / 255, 157 / 255, 1]\nnoble = [181 / 255, 255 / 255, 255 / 255, 1]\nsemimetals = [193 / 255, 194 / 255, 136 / 255, 1]\nhalogens = [255 / 255, 255 / 255, 136 / 255, 1]\ntransition = [253 / 255, 176 / 255, 178 / 255, 1]\nposttransition = [193 / 255, 193 / 255, 193 / 255, 1]\nlanthanides = [253 / 255, 172 / 255, 255 / 255, 1]\nactinides = [253 / 255, 130 / 255, 193 / 255, 1]\nother = [143 / 255, 250 / 255, 139 / 255, 1]\n\nelements = ['H', None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 'He',\n            'Li', 'Be', None, None, None, None, None, None, None, None, None, None, 'B', 'C', 'N', 'O', 'F', 'Ne',\n            'Na', 'Mg', None, None, None, None, None, None, None, None, None, None, 'Al', 'Si', 'P', 'S', 'Cl', 'Ar',\n            'K', 'Ca', 'Sc', 'Ti', 'V', 'Cr', 'Mn', 'Fe', 'Co', 'Ni', 'Cu', 'Zn', 'Ga', 'Ge', 'As', 'Se', 'Br', 'Kr',\n            'Rb', 'Sr', 'Y', 'Zr', 'Nb', 'Mo', 'Tc', 'Ru', 'Rh', 'Pd', 'Ag', 'Cd', 'In', 'Sn', 'Sb', 'Te', 'I', 'Xe',\n            'Cs', 'Ba', None, 'Hf', 'Ta', 'W', 'Re', 'Os', 'Ir', 'Pt', 'Au', 'Hg', 'Tl', 'Pb', 'Bi', 'Po', 'At', 'Rn',\n            'Fr', 'Ra', None, 'Rf', 'Db', 'Sg', 'Bh', 'Hs', 'Mt', 'Ds', 'Rg', 'Cn', 'Nh', 'Fl', 'Mc', 'Lv', 'Ts', 'Og',\n            None, '57-71', 'La', 'Ce', 'Pr', 'Nd', 'Pm', 'Sm', 'Eu', 'Gd', 'Tb', 'Dy', 'Ho', 'Er', 'Tm', 'Yb', 'Lu',\n            None,\n            None, '89-103', 'Ac', 'Th', 'Pa', 'U', 'Np', 'Pu', 'Am', 'Cm', 'Bk', 'Cf', 'Es', 'Fm', 'Md', 'No', 'Lr',\n            None]\n\nnon_metal_elements = ['H', 'C', 'N', 'O', 'P', 'S', 'Se']\nalkaline_elements = ['Li', 'Na', 'K', 'Rb', 'Cs', 'Fr']\nalkaline_earth_elements = ['Be', 'Mg', 'Ca', 'Sr', 'Ba', 'Ra']\nnoble_elements = ['He', 'Ne', 'Ar', 'Kr', 'Xe', 'Rn', 'Og']\nsemimetals_elements = ['B', 'Si', 'Ge', 'As', 'Sb', 'Te', 'Po']\nhalogens_elements = ['F', 'Cl', 'Br', 'I', 'At', 'Ts']\ntransition_elements = ['La', 'Ac', 'Sc', 'Ti', 'V', 'Cr', 'Mn', 'Fe', 'Co', 'Ni', 'Cu', 'Zn',\n                       'Y', 'Zr', 'Nb', 'Mo', 'Tc', 'Ru', 'Rh', 'Pd', 'Ag', 'Cd',\n                       'Hf', 'Ta', 'W', 'Re', 'Os', 'Ir', 'Pt', 'Au', 'Hg',\n                       'Rf', 'Db', 'Sg', 'Bh', 'Hs', 'Mt', 'Ds', 'Rg', 'Cn']\nposttransition_elements = ['Al', 'Ga', 'In', 'Sn', 'Tl', 'Pb', 'Bi', 'Nh', 'Fl', 'Mc', 'Lv']\nlanthanides_elements = ['Ce', 'Pr', 'Nd', 'Pm', 'Sm', 'Eu', 'Gd', 'Tb', 'Dy', 'Ho', 'Er', 'Tm', 'Yb', 'Lu']\nactinides_elements = ['Th', 'Pa', 'U', 'Np', 'Pu', 'Am', 'Cm', 'Bk', 'Cf', 'Es', 'Fm', 'Md', 'No', 'Lr']\nnum1 = ['57-71']\nnum2 = ['89-103']
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/info/info.py b/info/info.py
--- a/info/info.py	(revision f4308fa307ff931744c60cee2b843ea318e60a6d)
+++ b/info/info.py	(date 1681888802654)
@@ -38,4 +38,8 @@
 lanthanides_elements = ['Ce', 'Pr', 'Nd', 'Pm', 'Sm', 'Eu', 'Gd', 'Tb', 'Dy', 'Ho', 'Er', 'Tm', 'Yb', 'Lu']
 actinides_elements = ['Th', 'Pa', 'U', 'Np', 'Pu', 'Am', 'Cm', 'Bk', 'Cf', 'Es', 'Fm', 'Md', 'No', 'Lr']
 num1 = ['57-71']
-num2 = ['89-103']
\ No newline at end of file
+num2 = ['89-103']
+
+
+text = ['Element: ', '', 'Atomic Mass: ', '', 'Discoverer: ', '', 'Symbol: ', '', 'Period: ', '',
+        'Atomic Number: ', '', 'Number of Shells: ', '']
\ No newline at end of file
Index: GUI/kivy_app.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import sqlite3\n\nfrom kivy.app import App\nfrom kivy.uix.button import Button\nfrom kivy.config import Config\nfrom kivy.uix.boxlayout import BoxLayout\nfrom kivy.uix.gridlayout import GridLayout\nfrom kivy.uix.widget import Widget\nfrom kivy.uix.anchorlayout import AnchorLayout\nfrom kivy.uix.label import Label\n\nfrom SQL.select_info import select_info\n\nfrom info.info import font_color, non_metal, alkaline, alkaline_earth, noble, semimetals, halogens, transition\nfrom info.info import posttransition, lanthanides, actinides\n\nfrom info.info import elements, non_metal_elements, alkaline_elements, alkaline_earth_elements, noble_elements\nfrom info.info import semimetals_elements, halogens_elements, transition_elements, posttransition_elements\nfrom info.info import lanthanides_elements, actinides_elements, num2, num1\nfrom info.screen_info import screen\n\nConfig.set('graphics', 'resizable', 0)\nConfig.set('graphics', 'width', 1300)\nConfig.set('graphics', 'height', 840)\n\nfont = 'Arial'\nbold = True\n\n\nclass PeriodicTableApp(App):\n    def build(self):\n        bl = BoxLayout(orientation='vertical')\n\n        al = AnchorLayout(size_hint=[1, .2])\n\n        gl2 = GridLayout(cols=6, rows=3, padding=[50], spacing=5)\n\n        self.lbl1 = Label(text='Element:', font_family=font,\n                          bold=bold, font_size=screen())\n\n        self.lbl2 = Label(text=' ', font_family=font,\n                          bold=bold, font_size=screen())\n\n        self.lbl3 = Label(text='Atomic Mass:', font_family=font,\n                          bold=bold, font_size=screen())\n\n        self.lbl4 = Label(text=' ', font_family=font,\n                          bold=bold, font_size=screen())\n\n        self.lbl5 = Label(text='Discoverer:', font_family=font,\n                          bold=bold, font_size=screen())\n\n        self.lbl6 = Label(text=' ', font_family=font,\n                          bold=bold, font_size=screen())\n\n        self.lbl7 = Label(text='Symbol:', font_family=font,\n                          bold=bold, font_size=screen())\n\n        self.lbl8 = Label(text=' ', font_family=font,\n                          bold=bold, font_size=screen())\n\n        self.lbl9 = Label(text='Period:', font_family=font,\n                          bold=bold, font_size=screen())\n\n        self.lbl10 = Label(text=' ', font_family=font,\n                           bold=bold, font_size=screen())\n\n        self.lbl11 = Label(text='Year:', font_family=font,\n                           bold=bold, font_size=screen())\n\n        self.lbl12 = Label(text=' ', font_family=font,\n                           bold=bold, font_size=screen())\n\n        self.lbl13 = Label(text='Atomic Number:', font_family=font,\n                           bold=bold, font_size=screen())\n\n        self.lbl14 = Label(text=' ', font_family=font,\n                           bold=bold, font_size=screen())\n\n        self.lbl15 = Label(text='Number Of Shells:', font_family=font,\n                           bold=bold, font_size=screen())\n\n        self.lbl16 = Label(text=' ', font_family=font,\n                           bold=bold, font_size=screen())\n\n        gl2.add_widget(self.lbl1)\n        gl2.add_widget(self.lbl2)\n        gl2.add_widget(self.lbl3)\n        gl2.add_widget(self.lbl4)\n        gl2.add_widget(self.lbl5)\n        gl2.add_widget(self.lbl6)\n        gl2.add_widget(self.lbl7)\n        gl2.add_widget(self.lbl8)\n        gl2.add_widget(self.lbl9)\n        gl2.add_widget(self.lbl10)\n        gl2.add_widget(self.lbl11)\n        gl2.add_widget(self.lbl12)\n        gl2.add_widget(self.lbl13)\n        gl2.add_widget(self.lbl14)\n        gl2.add_widget(self.lbl15)\n        gl2.add_widget(self.lbl16)\n\n        gl = GridLayout(cols=18, rows=9, padding=[50], spacing=5, size_hint=[1, .8])\n\n        for element in elements:\n            if element:\n                if element in non_metal_elements:\n                    gl.add_widget(Button(text=element, background_color=non_metal, background_normal='',\n                                         color=font_color, bold=True, on_press=self.on_click))\n                elif element in alkaline_elements:\n                    gl.add_widget(Button(text=element, background_color=alkaline, background_normal='',\n                                         color=font_color, bold=True, on_press=self.on_click))\n                elif element in alkaline_earth_elements:\n                    gl.add_widget(Button(text=element, background_color=alkaline_earth, background_normal='',\n                                         color=font_color, bold=True, on_press=self.on_click))\n                elif element in noble_elements:\n                    gl.add_widget(Button(text=element, background_color=noble, background_normal='',\n                                         color=font_color, bold=True, on_press=self.on_click))\n                elif element in semimetals_elements:\n                    gl.add_widget(Button(text=element, background_color=semimetals, background_normal='',\n                                         color=font_color, bold=True, on_press=self.on_click))\n                elif element in halogens_elements:\n                    gl.add_widget(Button(text=element, background_color=halogens, background_normal='',\n                                         color=font_color, bold=True, on_press=self.on_click))\n                elif element in transition_elements:\n                    gl.add_widget(Button(text=element, background_color=transition, background_normal='',\n                                         color=font_color, bold=True, on_press=self.on_click))\n                elif element in posttransition_elements:\n                    gl.add_widget(Button(text=element, background_color=posttransition, background_normal='',\n                                         color=font_color, bold=True, on_press=self.on_click))\n                elif element in lanthanides_elements:\n                    gl.add_widget(Button(text=element, background_color=lanthanides, background_normal='',\n                                         color=font_color, bold=True, on_press=self.on_click))\n                elif element in actinides_elements:\n                    gl.add_widget(Button(text=element, background_color=actinides, background_normal='',\n                                         color=font_color, bold=True, on_press=self.on_click))\n                elif element in num1:\n                    gl.add_widget(Button(text=element, background_color=lanthanides, background_normal='',\n                                         color=font_color, bold=True))\n                elif element in num2:\n                    gl.add_widget(Button(text=element, background_color=actinides, background_normal='',\n                                         color=font_color, bold=True))\n            else:\n                gl.add_widget(Widget())\n\n        bl.add_widget(al)\n        bl.add_widget(gl)\n        al.add_widget(gl2)\n\n        return bl\n\n    def on_click(self, instance):\n        \"\"\"\n        Function returns information about element.\n        :param instance:\n        :return: label update after click\n        \"\"\"\n        with sqlite3.connect('PeriodicTable.db') as db:\n            curr = db.cursor()\n\n            self.symbol = select_info(curr, Symbol=instance.text)\n            self.update_label()\n\n    def update_label(self):\n        \"\"\"\n        Function returns information about element from SQLite\n        :return: information from DB to labels\n        \"\"\"\n        self.lbl2.text = self.symbol[1]  # Element\n        self.lbl4.text = self.symbol[3]  # AM\n        self.lbl6.text = self.symbol[5]  # D\n        self.lbl8.text = self.symbol[2]  # S\n        self.lbl10.text = self.symbol[4]  # P\n        self.lbl12.text = self.symbol[6]  # Y\n        self.lbl14.text = self.symbol[0]  # AN\n        self.lbl16.text = self.symbol[7]  # NOS\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/GUI/kivy_app.py b/GUI/kivy_app.py
--- a/GUI/kivy_app.py	(revision f4308fa307ff931744c60cee2b843ea318e60a6d)
+++ b/GUI/kivy_app.py	(date 1681888965686)
@@ -16,7 +16,7 @@
 
 from info.info import elements, non_metal_elements, alkaline_elements, alkaline_earth_elements, noble_elements
 from info.info import semimetals_elements, halogens_elements, transition_elements, posttransition_elements
-from info.info import lanthanides_elements, actinides_elements, num2, num1
+from info.info import lanthanides_elements, actinides_elements, num2, num1, text
 from info.screen_info import screen
 
 Config.set('graphics', 'resizable', 0)
diff --git a/GUI/widgets.py b/GUI/widgets.py
new file mode 100644
